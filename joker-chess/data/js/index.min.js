"use strict";console.warn=function(...args){console.log("[WARNING]",...args),Dialog.warning("警告",args.join(" "))},console.error=function(...args){console.log("[ERROR]",...args),Dialog.error("错误",args.join(" "))};class Dialog{static info(title,text){Swal.fire(title,text,"info")}static success(title,text){Swal.fire(title,text,"success")}static error(title,text){Swal.fire(title,text,"error")}static warning(title,text){Swal.fire(title,text,"warning")}static confirm(title,text,callback){Swal.fire({title:title,text:text,icon:"question",showCancelButton:!0,confirmButtonColor:"3085d6",cancelButtonColor:"d33",confirmButtonText:"确定",cancelButtonText:"取消"}).then(result=>{result.isConfirmed?callback(!0):callback(!1)})}}class ImgManager extends Loader{static imgs={"CC-B":"data/img/CC-B.png","CC-C":"data/img/CC-C.png","CC-M":"data/img/CC-M.png","CC-P":"data/img/CC-P.png","CC-S":"data/img/CC-S.png","CC-W":"data/img/CC-W.png","CC-X":"data/img/CC-X.png","IC-B":"data/img/IC-B.png","IC-K":"data/img/IC-K.png","IC-N":"data/img/IC-N.png","IC-Q":"data/img/IC-Q.png","IC-R":"data/img/IC-R.png","IC-S":"data/img/IC-S.png","chosen-r":"data/img/chosen-r.png","chosen-b":"data/img/chosen-b.png","chosen-y":"data/img/chosen-y.png",background:"data/img/background.png"};static getImg(name){return this.imgs[name]?this.imgs[name]:""}}class GameManager{static size;static board_node;static board_img_node;static board_img_moveFrom;static board_img_moveTo;static board_img_chosen;static player_turn_node;static player_color={CC:"红方",IC:"黑方"};static player_turn;static chessMap={"CC-B1":{x:2,y:7,type:"CC-B",color:"CC",img:ImgManager.getImg("CC-B")},"CC-B2":{x:3,y:7,type:"CC-B",color:"CC",img:ImgManager.getImg("CC-B")},"CC-B3":{x:4,y:7,type:"CC-B",color:"CC",img:ImgManager.getImg("CC-B")},"CC-B4":{x:6,y:7,type:"CC-B",color:"CC",img:ImgManager.getImg("CC-B")},"CC-B5":{x:7,y:7,type:"CC-B",color:"CC",img:ImgManager.getImg("CC-B")},"CC-C1":{x:1,y:7,type:"CC-C",color:"CC",img:ImgManager.getImg("CC-C")},"CC-C2":{x:8,y:7,type:"CC-C",color:"CC",img:ImgManager.getImg("CC-C")},"CC-M1":{x:2,y:8,type:"CC-M",color:"CC",img:ImgManager.getImg("CC-M")},"CC-M2":{x:7,y:8,type:"CC-M",color:"CC",img:ImgManager.getImg("CC-M")},"CC-P1":{x:1,y:8,type:"CC-P",color:"CC",img:ImgManager.getImg("CC-P")},"CC-P2":{x:8,y:8,type:"CC-P",color:"CC",img:ImgManager.getImg("CC-P")},"CC-S1":{x:5,y:7,type:"CC-S",color:"CC",img:ImgManager.getImg("CC-S")},"CC-S2":{x:5,y:8,type:"CC-S",color:"CC",img:ImgManager.getImg("CC-S")},"CC-W":{x:4,y:8,type:"CC-W",color:"CC",img:ImgManager.getImg("CC-W")},"CC-X1":{x:3,y:8,type:"CC-X",color:"CC",img:ImgManager.getImg("CC-X")},"CC-X2":{x:6,y:8,type:"CC-X",color:"CC",img:ImgManager.getImg("CC-X")},"IC-B1":{x:3,y:1,type:"IC-B",color:"IC",img:ImgManager.getImg("IC-B")},"IC-B2":{x:6,y:1,type:"IC-B",color:"IC",img:ImgManager.getImg("IC-B")},"IC-K":{x:4,y:1,type:"IC-K",color:"IC",img:ImgManager.getImg("IC-K")},"IC-N1":{x:2,y:1,type:"IC-N",color:"IC",img:ImgManager.getImg("IC-N")},"IC-N2":{x:7,y:1,type:"IC-N",color:"IC",img:ImgManager.getImg("IC-N")},"IC-Q":{x:5,y:1,type:"IC-Q",color:"IC",img:ImgManager.getImg("IC-Q")},"IC-R1":{x:1,y:1,type:"IC-R",color:"IC",img:ImgManager.getImg("IC-R")},"IC-R2":{x:8,y:1,type:"IC-R",color:"IC",img:ImgManager.getImg("IC-R")},"IC-S1":{x:1,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S2":{x:2,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S3":{x:3,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S4":{x:4,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S5":{x:5,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S6":{x:6,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S7":{x:7,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")},"IC-S8":{x:8,y:2,type:"IC-S",color:"IC",img:ImgManager.getImg("IC-S")}};static ChessManagers={"CC-B1":void 0,"CC-B2":void 0,"CC-B3":void 0,"CC-B4":void 0,"CC-B5":void 0,"CC-C1":void 0,"CC-C2":void 0,"CC-M1":void 0,"CC-M2":void 0,"CC-P1":void 0,"CC-P2":void 0,"CC-S1":void 0,"CC-S2":void 0,"CC-W":void 0,"CC-X1":void 0,"CC-X2":void 0,"IC-B1":void 0,"IC-B2":void 0,"IC-K":void 0,"IC-N1":void 0,"IC-N2":void 0,"IC-Q":void 0,"IC-R1":void 0,"IC-R2":void 0,"IC-S1":void 0,"IC-S2":void 0,"IC-S3":void 0,"IC-S4":void 0,"IC-S5":void 0,"IC-S6":void 0,"IC-S7":void 0,"IC-S8":void 0};static moveToBoxes=[];static movingChess;static setup(){this.board_node=document.getElementById("board"),this.board_img_node=document.getElementById("board-img"),this.board_img_moveFrom=document.getElementById("move-from"),this.board_img_moveTo=document.getElementById("move-to"),this.board_img_chosen=document.getElementById("chosen"),this.player_turn_node=document.getElementById("player-turn"),document.getElementById("export-btn").addEventListener("click",this.export.bind(this)),this.setupBoard(),this.setSize()}static setSize(){this.size=Math.min(window.innerWidth,window.innerHeight),window.innerWidth>=window.innerHeight?document.body.className="horizontal":document.body.className="vertical",this.board_node.style.width=`${.8*this.size}px`,this.board_node.style.height=`${.8*this.size}px`}static setupBoard(){this.board_node.addEventListener("click",this.boardClicked.bind(this)),this.board_img_node.src=ImgManager.getImg("background"),this.board_img_moveFrom.src=ImgManager.getImg("chosen-y"),this.board_img_moveTo.src=ImgManager.getImg("chosen-y"),this.board_img_chosen.src=ImgManager.getImg("chosen-b");for(let x=1;x<=8;x++)for(let y=1;y<=8;y++){let node=document.createElement("img");node.src=ImgManager.getImg("chosen-r"),node.alt="move to here",node.classList.add("selectBox"),node.style.position="absolute",node.style.left=`${12.5*(x-1)}%`,node.style.top=`${12.5*(y-1)}%`,node.style.display="none",node.style.pointerEvents="none",this.board_node.appendChild(node),this.moveToBoxes.push({x:x,y:y,node:node})}let data;window.location.search.startsWith("?data=")&&(data=window.location.search.slice(6));let index=1;for(const id in this.chessMap)this.ChessManagers[id]=new ChessManager(id),data&&(this.ChessManagers[id].setPos(Number(data[index]),Number(data[index+1])),this.ChessManagers[id].moved=Number(data[index+2]),index+=3);data&&data[0]?this.player_turn="C"==data[0]?"CC":"IC":this.player_turn="CC",this.player_turn_node.textContent=`${this.player_color[this.player_turn]}`}static choose(x,y){this.board_img_chosen.style.display="block",this.board_img_chosen.style.left=`${12.5*(x-1)}%`,this.board_img_chosen.style.top=`${12.5*(y-1)}%`}static canMoveTipNode(x,y){for(let box of this.moveToBoxes)box.x==x&&box.y==y&&(box.node.style.display="block")}static unChooseAll(){for(let box of this.moveToBoxes)box.node.style.display="none";this.board_img_chosen.style.display="none";for(const id in this.ChessManagers)"chosen"==this.ChessManagers[id].status&&this.ChessManagers[id].unChoose();this.movingChess=void 0}static getChessByPos(x,y){for(const id in this.chessMap){const chessManager=this.ChessManagers[id];if(chessManager.posx==x&&chessManager.posy==y)return chessManager}}static boardClicked(event){const x=Math.floor(event.offsetX/(.8*this.size/8))+1,y=Math.floor(event.offsetY/(.8*this.size/8))+1,chess=this.getChessByPos(x,y);if(chess)""==chess.status?chess.id.startsWith(this.player_turn)?(this.unChooseAll(),chess.choose()):this.movingChess?this.movingChess.moveTo(x,y):Dialog.error("不是你的回合",`现在为${this.player_color[this.player_turn]}走棋`):"chosen"==chess.status&&this.unChooseAll();else{if(!this.movingChess)return;this.movingChess.moveTo(x,y)}}static nextRound(fromx,fromy,tox,toy){"CC"==this.player_turn?this.player_turn="IC":this.player_turn="CC",this.player_turn_node.textContent=`${this.player_color[this.player_turn]}`,this.board_img_moveFrom.style.display="block",this.board_img_moveFrom.style.left=`${12.5*(fromx-1)}%`,this.board_img_moveFrom.style.top=`${12.5*(fromy-1)}%`,this.board_img_moveTo.style.display="block",this.board_img_moveTo.style.left=`${12.5*(tox-1)}%`,this.board_img_moveTo.style.top=`${12.5*(toy-1)}%`,this.unChooseAll()}static export(){let exportData="";exportData+="CC"==this.player_turn?"C":"I";for(const id in this.ChessManagers){const chessManager=this.ChessManagers[id];exportData+="eaten"==chessManager.status?0:chessManager.posx,exportData+="eaten"==chessManager.status?0:chessManager.posy,exportData+=chessManager.moved?1:0}const url=window.location.href.split("?")[0]+"?data="+exportData;navigator.clipboard?navigator.clipboard.writeText(url).then(()=>{Dialog.success("导出成功","已复制到剪贴板")}).catch(()=>{Dialog.error("导出失败",`请手动复制以下链接${url}`)}):Dialog.error("导出失败",`请手动复制以下链接${url}`)}}class ChessManager{chessMap=GameManager.chessMap;chess_node;board_node;id;type;moved=!1;status="";posx;posy;constructor(id){this.board_node=document.getElementById("board"),this.id=id,this.type=this.chessMap[id].type,this.createChess(id)}unChoose(){GameManager.movingChess==this&&(GameManager.movingChess=void 0),this.status=""}choose(){GameManager.movingChess=this,this.status="chosen",GameManager.choose(this.posx,this.posy);let canMovePosList=MoveManager.canMovePosList(this);console.log(canMovePosList);for(let pos of canMovePosList)GameManager.canMoveTipNode(pos[0],pos[1])}createChess(){this.chess_node=document.createElement("div"),this.chess_node.id=this.id,this.chess_node.classList.add("chess");const chessImg=document.createElement("img");chessImg.id=this.id+"-img",chessImg.src=this.chessMap[this.id].img,chessImg.alt=this.id,this.chess_node.appendChild(chessImg),this.board_node.appendChild(this.chess_node),this.setPos(this.chessMap[this.id].x,this.chessMap[this.id].y)}setPos(x,y){[1,2,3,4,5,6,7,8].includes(x)&&[1,2,3,4,5,6,7,8].includes(y)?(this.posx=x,this.posy=y,this.chess_node.style.left=`${12.5*(x-1)}%`,this.chess_node.style.top=`${12.5*(y-1)}%`):0==x&&0==y?(this.status="eaten",this.posx=0,this.posy=0,this.chess_node.parentNode&&this.chess_node.parentNode.removeChild(this.chess_node)):console.warn(`Invalid position: (${x}, ${y}), Chess: ${this.id}`)}canMoveTo(x,y){if(![1,2,3,4,5,6,7,8].includes(x)||![1,2,3,4,5,6,7,8].includes(y))return!1;for(let pos of MoveManager.canMovePosList(this))if(pos[0]==x&&pos[1]==y)return!0;return!1}moveTo(x,y){if("chosen"!=this.status)return GameManager.unChooseAll();if([1,2,3,4,5,6,7,8].includes(x)&&[1,2,3,4,5,6,7,8].includes(y)){if(!this.canMoveTo(x,y))return Dialog.warning("移动失败",`${this.id}不能从(${this.posx}, ${this.posy})移动到(${x}, ${y})`);if(GameManager.getChessByPos(x,y)){const eatenChess=GameManager.getChessByPos(x,y);eatenChess.setPos(0,0),"IC-K"==eatenChess.id&&Dialog.success("胜利","红方获胜"),"CC-W"==eatenChess.id&&Dialog.success("胜利","黑方获胜")}this.moved=!0,GameManager.nextRound(this.posx,this.posy,x,y),this.setPos(x,y)}}}class MoveManager{static isEmpty(posx,posy){return!GameManager.getChessByPos(posx,posy)}static canEat(posx,posy,color){if(this.isEmpty(posx,posy))return!0;const chess=GameManager.getChessByPos(posx,posy);return chess.id.slice(0,2)!=color}static isBlock(posx,posy){return(1==posx||8==posx)&&6==posy}static canMovePosList(chess){const posx=chess.posx,posy=chess.posy;if(chess.id.startsWith("CC")&&this.isBlock(posx,posy))return[];switch(chess.type){case"CC-B":return this.moveCCB(posx,posy);case"CC-C":return this.moveCCC(posx,posy);case"CC-M":return this.moveCCM(posx,posy);case"CC-P":return this.moveCCP(posx,posy);case"CC-S":return this.moveCCS(posx,posy);case"CC-W":return this.moveCCW(posx,posy);case"CC-X":return this.moveCCX(posx,posy);case"IC-B":return this.moveICB(posx,posy);case"IC-K":return this.moveICK(posx,posy);case"IC-N":return this.moveICN(posx,posy);case"IC-Q":return this.moveICQ(posx,posy);case"IC-R":return this.moveICR(posx,posy);case"IC-S":return this.moveICS(posx,posy)}return[]}static moveCCB(posx,posy){let moves=[];return this.canEat(posx,posy-1,"CC")&&moves.push([posx,posy-1]),posy<=4&&this.canEat(posx-1,posy,"CC")&&moves.push([posx-1,posy]),posy<=4&&this.canEat(posx+1,posy,"CC")&&moves.push([posx+1,posy]),moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCC(posx,posy){let moves=[];for(let direction of[[-1,0],[1,0],[0,-1],[0,1]])for(let distance=1;distance<=8;distance++){let x=posx+direction[0]*distance,y=posy+direction[1]*distance;if(x<1||x>8||y<1||y>8)break;if(this.isBlock(x,y)&&this.canEat(x,y,"CC")){moves.push([x,y]);break}if(!this.isEmpty(x,y)){this.canEat(x,y,"CC")&&moves.push([x,y]);break}moves.push([x,y])}return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCM(posx,posy){let moves=[];return this.isEmpty(posx,posy-1)&&this.canEat(posx+1,posy-2,"CC")&&moves.push([posx+1,posy-2]),this.isEmpty(posx,posy-1)&&this.canEat(posx-1,posy-2,"CC")&&moves.push([posx-1,posy-2]),this.isEmpty(posx+1,posy)&&this.canEat(posx+2,posy-1,"CC")&&moves.push([posx+2,posy-1]),this.isEmpty(posx-1,posy)&&this.canEat(posx-2,posy-1,"CC")&&moves.push([posx-2,posy-1]),this.isEmpty(posx,posy+1)&&this.canEat(posx+1,posy+2,"CC")&&moves.push([posx+1,posy+2]),this.isEmpty(posx,posy+1)&&this.canEat(posx-1,posy+2,"CC")&&moves.push([posx-1,posy+2]),this.isEmpty(posx+1,posy)&&this.canEat(posx+2,posy+1,"CC")&&moves.push([posx+2,posy+1]),this.isEmpty(posx-1,posy)&&this.canEat(posx-2,posy+1,"CC")&&moves.push([posx-2,posy+1]),moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCP(posx,posy){let moves=[];for(let direction of[[-1,0],[1,0],[0,-1],[0,1]])for(let distance=1;distance<=8;distance++){let x=posx+direction[0]*distance,y=posy+direction[1]*distance;if(x<1||x>8||y<1||y>8)break;if(this.isBlock(x,y)&&this.isEmpty(x,y)){moves.push([x,y]);break}if(!this.isEmpty(x,y))break;moves.push([x,y])}for(let targetx=1;targetx<=8;targetx++)for(let targety=1;targety<=8;targety++){if(this.isEmpty(targetx,targety))continue;if(!this.canEat(targetx,targety,"CC"))continue;let targetChess=GameManager.getChessByPos(targetx,targety),minx=Math.min(posx,targetx),maxx=Math.max(posx,targetx),miny=Math.min(posy,targety),maxy=Math.max(posy,targety),middleCount=0;if(targetx==posx){for(let middley=miny+1;middley<maxy;middley++)1!=posx&&8!=posx||6!=middley||(middleCount=1/0),this.isEmpty(targetx,middley)||middleCount++;1==middleCount&&moves.push([targetx,targety])}if(targety==posy){for(let middlex=minx+1;middlex<maxx;middlex++)this.isEmpty(middlex,targety)||middleCount++;1==middleCount&&moves.push([targetx,targety])}if(targetx!=posx&&targety!=posy){if(!targetChess.moved)continue;let k=(targety-posy)/(targetx-posx),b=posy-k*posx;for(let middlex=minx+1;middlex<maxx;middlex++){if(!Number.isInteger(k*middlex+b))continue;let middley=k*middlex+b;this.isEmpty(middlex,middley)||middleCount++}1==middleCount&&moves.push([targetx,targety])}}return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCS(posx,posy){let moves=[];for(let direction of[[-1,-1],[-1,1],[1,-1],[1,1]])this.canEat(posx+direction[0],posy+direction[1],"CC")&&moves.push([posx+direction[0],posy+direction[1]]);return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCW(posx,posy){let moves=[];for(let direction of[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[-1,1],[1,-1],[1,1]])this.canEat(posx+direction[0],posy+direction[1],"CC")&&moves.push([posx+direction[0],posy+direction[1]]);return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveCCX(posx,posy){let moves=[];for(let direction of[[-1,-1],[-1,1],[1,-1],[1,1]])for(let distance=1;distance<=3;distance++)1!=distance?this.isEmpty(posx+direction[0]*(distance-1),posy+direction[1]*(distance-1))&&this.canEat(posx+direction[0]*distance,posy+direction[1]*distance,"CC")&&moves.push([posx+direction[0]*distance,posy+direction[1]*distance]):this.canEat(posx+direction[0],posy+direction[1],"CC")&&moves.push([posx+direction[0],posy+direction[1]]);return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICB(posx,posy){let moves=[];for(let direction of[[-1,-1],[-1,1],[1,-1],[1,1]])for(let distance=1;distance<=8;distance++){let x=posx+direction[0]*distance,y=posy+direction[1]*distance;if(x<1||x>8||y<1||y>8)break;if(this.isBlock(x,y)&&this.canEat(x,y,"IC")){moves.push([x,y]);break}if(!this.isEmpty(x,y)){this.canEat(x,y,"IC")&&moves.push([x,y]);break}moves.push([x,y])}return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICK(posx,posy){let moves=[];for(let direction of[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[-1,1],[1,-1],[1,1]])this.canEat(posx+direction[0],posy+direction[1],"IC")&&moves.push([posx+direction[0],posy+direction[1]]);return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICN(posx,posy){let moves=[];for(let direction of[[-1,-2],[-2,-1],[-2,1],[-1,2],[1,-2],[2,-1],[2,1],[1,2]])this.canEat(posx+direction[0],posy+direction[1],"IC")&&moves.push([posx+direction[0],posy+direction[1]]);return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICQ(posx,posy){let moves=[];for(let direction of[[1,0],[-1,0],[0,1],[0,-1],[1,1],[-1,-1],[1,-1],[-1,1]])for(let distance=1;distance<=8;distance++){let x=posx+direction[0]*distance,y=posy+direction[1]*distance;if(x<1||x>8||y<1||y>8)break;if(this.isBlock(x,y)){this.canEat(x,y,"IC")&&moves.push([x,y]);break}if(!this.isEmpty(x,y)){this.canEat(x,y,"IC")&&moves.push([x,y]);break}moves.push([x,y])}return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICR(posx,posy){let moves=[];for(let direction of[[-1,0],[1,0],[0,-1],[0,1]])for(let distance=1;distance<=8;distance++){let x=posx+direction[0]*distance,y=posy+direction[1]*distance;if(x<1||x>8||y<1||y>8)break;if(this.isBlock(x,y)){this.canEat(x,y,"IC")&&moves.push([x,y]);break}if(!this.isEmpty(x,y)){this.canEat(x,y,"IC")&&moves.push([x,y]);break}moves.push([x,y])}return moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}static moveICS(posx,posy){let moves=[];return this.isEmpty(posx,posy+1)&&moves.push([posx,posy+1]),!this.isEmpty(posx-1,posy+1)&&this.canEat(posx-1,posy+1,"IC")&&moves.push([posx-1,posy+1]),!this.isEmpty(posx+1,posy+1)&&this.canEat(posx+1,posy+1,"IC")&&moves.push([posx+1,posy+1]),2==posy&&this.isEmpty(posx,posy+1)&&this.isEmpty(posx,posy+2)&&moves.push([posx,posy+2]),moves.filter(v=>v[0]>=1&&v[0]<=8&&v[1]>=1&&v[1]<=8)}}document.addEventListener("DOMContentLoaded",()=>ImgManager.loadImgs(GameManager.setup.bind(GameManager))),window.addEventListener("resize",GameManager.setSize.bind(GameManager));