class BoardManager{static size;static board_node;static board_img_node;static setup(){this.board_node=document.getElementById("board"),this.board_img_node=document.getElementById("board-img"),this.setupBoard(),this.setSize()}static setSize(){this.size=Math.min(window.innerWidth,window.innerHeight),window.innerWidth>=window.innerHeight?document.body.className="horizontal":document.body.className="vertical",this.board_node.style.width=`${.8*this.size}px`,this.board_node.style.height=`${.8*this.size}px`}static setupBoard(){this.board_img_node.src=ImgManager.getImg("background");for(const id in Data.chessMap)this.createChess(id)}static createChess(id){const chess_node=document.createElement("div");chess_node.id=id,chess_node.classList.add("chess");const chessImg=document.createElement("img");chessImg.id=id+"-img",chessImg.src=Data.chessMap[id].img,chessImg.alt=id,chess_node.appendChild(chessImg),this.board_node.appendChild(chess_node),chess_node.style.left=`${12.5*(Data.chessMap[id].x-1)}%`,chess_node.style.top=`${12.5*(Data.chessMap[id].y-1)}%`}}document.addEventListener("DOMContentLoaded",()=>ImgManager.loadImgs(BoardManager.setup.bind(BoardManager))),window.addEventListener("resize",BoardManager.setSize.bind(BoardManager));